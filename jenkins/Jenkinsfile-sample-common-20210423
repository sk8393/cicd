pipeline {
	agent { label "master" }

	environment {
		REPOSITORY = "cicd"
	}

	stages {
		stage("clean workspace") {
			steps {
				cleanWs()
			}
		}

		stage("git clone") {
			steps {
				sh "git clone -b test https://github.com/sk8393/cicd.git"
				sh "pwd"
				sh "ls -lR"
			}
		}

		stage("core task") {
			parallel {
				stage("build image") {
					when { expression { env.JOB_NAME == "sample-build-docker-image-20210423" } }
					steps {
						sh "cd ${REPOSITORY};docker build -t sk8393/postgres:test -f postgres/Dockerfile ."
						sh "cd ${REPOSITORY};docker build -t sk8393/requester:test -f requester/Dockerfile ."
					}
				}
				stage("create docker compose project") {
					when { expression { env.JOB_NAME == "sample-create-docker-compose-project-20210423" } }
					steps {
						sh "cd ${REPOSITORY}/jenkins/;docker-compose -p test up -d"
					}
				}
				stage("conduct test") {
					when { expression { env.JOB_NAME == "sample-conduct-test-20210423" } }
					steps {
						sh "cd ${REPOSITORY}/jenkins/;chmod 774 test.sh;./test.sh"
					}
				}
				stage("tag for production") {
					when { expression { env.JOB_NAME == "sample-tag-for-production-20210423" } }
					steps {
						echo "dummy"
					}
				}
			}
		}

                stage("clean up docker compose project?") {
                        steps{
                                timeout(time: 1, unit: "HOURS") {
                                        input "Would you like to clean up docker compose project?"
                                }
                        }
                }
                stage("clean up docker compose project") {
                        steps {
                                sh "cd ${REPOSITORY}/jenkins/;docker-compose -p test down"
                        }
                }
	}

	post {
		always {
			echo "Do clean up as needed."
		}
	}
}
